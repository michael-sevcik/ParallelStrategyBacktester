digraph "BacktestingLib" {
node [
  fontsize = "12"
];
subgraph clusterLegend {
  label = "Legend";
  color = black;
  edge [ style = invis ];
  legendNode0 [ label = "Executable", shape = egg ];
  legendNode1 [ label = "Static Library", shape = octagon ];
  legendNode2 [ label = "Shared Library", shape = doubleoctagon ];
  legendNode3 [ label = "Module Library", shape = tripleoctagon ];
  legendNode4 [ label = "Interface Library", shape = pentagon ];
  legendNode5 [ label = "Object Library", shape = hexagon ];
  legendNode6 [ label = "Unknown Library", shape = septagon ];
  legendNode7 [ label = "Custom Target", shape = box ];
  legendNode0 -> legendNode1 [ style = solid ];
  legendNode0 -> legendNode2 [ style = solid ];
  legendNode0 -> legendNode3;
  legendNode1 -> legendNode4 [ label = "Interface", style = dashed ];
  legendNode2 -> legendNode5 [ label = "Private", style = dotted ];
  legendNode3 -> legendNode6 [ style = solid ];
  legendNode0 -> legendNode7;
}
    "node0" [ label = "AlgoTrading", shape = octagon ];
    "node1" [ label = "BacktestingLib", shape = octagon ];
    "node1" -> "node0"  // BacktestingLib -> AlgoTrading
    "node2" [ label = "BacktestingLibTests", shape = egg ];
    "node2" -> "node1" [ style = dotted ] // BacktestingLibTests -> BacktestingLib
    "node2" -> "node2"  // BacktestingLibTests -> BacktestingLibTests
    "node3" [ label = "gtest\n(GTest::gtest)", shape = octagon ];
    "node2" -> "node3" [ style = dotted ] // BacktestingLibTests -> gtest
    "node4" [ label = "MovingAverageRobot", shape = octagon ];
    "node4" -> "node0"  // MovingAverageRobot -> AlgoTrading
    "node5" [ label = "Utils", shape = octagon ];
    "node6" [ label = "gmock\n(GTest::gmock)", shape = octagon ];
    "node7" [ label = "gmock_main\n(GTest::gmock_main)", shape = octagon ];
    "node8" [ label = "gtest_main\n(GTest::gtest_main)", shape = octagon ];
    "node8" -> "node3"  // gtest_main -> gtest
    "node9" [ label = "testOfStrategy", shape = egg ];
    "node9" -> "node1" [ style = dotted ] // testOfStrategy -> BacktestingLib
    "node9" -> "node4" [ style = dotted ] // testOfStrategy -> MovingAverageRobot
    "node9" -> "node5" [ style = dotted ] // testOfStrategy -> Utils
    "node10" [ label = "utilsTests", shape = egg ];
    "node10" -> "node5" [ style = dotted ] // utilsTests -> Utils
    "node10" -> "node3" [ style = dotted ] // utilsTests -> gtest
    "node10" -> "node10"  // utilsTests -> utilsTests
}
